// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.Available_Program", b =>
                {
                    b.Property<int>("AvailableProgramID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AvailableProgramID"));

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric");

                    b.Property<int>("ProgramID")
                        .HasColumnType("int");

                    b.Property<int>("WashingMachineID")
                        .HasColumnType("int");

                    b.HasKey("AvailableProgramID");

                    b.HasIndex("ProgramID");

                    b.HasIndex("WashingMachineID");

                    b.ToTable("Available_Program");

                    b.HasData(
                        new
                        {
                            AvailableProgramID = 1,
                            Price = 10.23m,
                            ProgramID = 1,
                            WashingMachineID = 1
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            CustomerId = 2,
                            FirstName = "Jane",
                            LastName = "Doe",
                            PhoneNumber = "123456789"
                        },
                        new
                        {
                            CustomerId = 3,
                            FirstName = "Julie",
                            LastName = "Doe",
                            PhoneNumber = "123456789"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.ProgramEntity", b =>
                {
                    b.Property<int>("ProgramId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProgramId"));

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TemperatureCelsius")
                        .HasColumnType("int");

                    b.HasKey("ProgramId");

                    b.ToTable("Program");

                    b.HasData(
                        new
                        {
                            ProgramId = 1,
                            DurationMinutes = 10,
                            Name = "Created",
                            TemperatureCelsius = 10
                        },
                        new
                        {
                            ProgramId = 2,
                            DurationMinutes = 10,
                            Name = "Ongoing",
                            TemperatureCelsius = 10
                        },
                        new
                        {
                            ProgramId = 3,
                            DurationMinutes = 10,
                            Name = "Completed",
                            TemperatureCelsius = 10
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Purchase_History", b =>
                {
                    b.Property<int>("AvailableProgramID")
                        .HasColumnType("int");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Rating")
                        .HasColumnType("int");

                    b.HasKey("AvailableProgramID", "CustomerID");

                    b.HasIndex("CustomerID");

                    b.ToTable("Purchase_History");

                    b.HasData(
                        new
                        {
                            AvailableProgramID = 1,
                            CustomerID = 1,
                            PurchaseDate = new DateTime(2025, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Rating = 10
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Washing_Machine", b =>
                {
                    b.Property<int>("WashingMachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WashingMachineId"));

                    b.Property<decimal>("MaxWeight")
                        .HasPrecision(10, 2)
                        .HasColumnType("numeric");

                    b.Property<string>("SerialNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("WashingMachineId");

                    b.ToTable("Washing_Machine");

                    b.HasData(
                        new
                        {
                            WashingMachineId = 1,
                            MaxWeight = 20.2m,
                            SerialNumber = "2134"
                        });
                });

            modelBuilder.Entity("WebApplication1.Models.Available_Program", b =>
                {
                    b.HasOne("WebApplication1.Models.ProgramEntity", "ProgramEntity")
                        .WithMany("AvailablePrograms")
                        .HasForeignKey("ProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Washing_Machine", "WashingMachine")
                        .WithMany("Available_Program")
                        .HasForeignKey("WashingMachineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProgramEntity");

                    b.Navigation("WashingMachine");
                });

            modelBuilder.Entity("WebApplication1.Models.Purchase_History", b =>
                {
                    b.HasOne("WebApplication1.Models.Available_Program", "Available_Program")
                        .WithMany("PurchaseHistoryes")
                        .HasForeignKey("AvailableProgramID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Customer", "Customer")
                        .WithMany("Purchases")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Available_Program");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("WebApplication1.Models.Available_Program", b =>
                {
                    b.Navigation("PurchaseHistoryes");
                });

            modelBuilder.Entity("WebApplication1.Models.Customer", b =>
                {
                    b.Navigation("Purchases");
                });

            modelBuilder.Entity("WebApplication1.Models.ProgramEntity", b =>
                {
                    b.Navigation("AvailablePrograms");
                });

            modelBuilder.Entity("WebApplication1.Models.Washing_Machine", b =>
                {
                    b.Navigation("Available_Program");
                });
#pragma warning restore 612, 618
        }
    }
}
